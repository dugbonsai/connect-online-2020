{
  "adminInterface":":4985",
  "interface":":4984",
  "logging": {
    "console": {
      "log_keys": ["Sync"]
    }
  },
  "databases": {


    "userprofile": {
      "server": "http://127.0.0.1:8091",
      "bucket": "userprofile",
      "username": "userprofile_user",
      "password": "password",
      "num_index_replicas": 1,
      "enable_shared_bucket_access": true,
      "import_docs": true,


      "sync": `function sync(doc, oldDoc) {
        /* Authorization */
        // Allow document update only if it's made by user specified in doc.email attribute
        requireUser(doc.email);

        /* Data Validation */
        if (!isDelete()) {
          // Validate the presence of email fields
          validateNotEmpty("email", doc.email);

          // Check if document is being created / added for first time
          if (isCreate()) {
            // Validate format of document ID
            var expectedDocId = "user" + "::" + doc.email;
            if (expectedDocId != doc._id) {
              throw({forbidden: "user doc Id must be of form user::<email address>"});
            }
          } else {
            // Validate that the email hasn't changed.
            validateReadOnly("email", doc.email, oldDoc.email);
          }
        }

        /* Routing */
        // Add this document to the user's channel
        channel("channel." + doc.email);

        /* Access Control */
        if (!isDelete()) {
          // Grant user access to the user's channel
          access(email, "channel." + doc.email)
        }

        /* Helper functions */
        // get type property
        function getType() {
          return (isDelete() ? oldDoc.type : doc.type);
        }

        // get email Id property
        function getEmail() {
          return (isDelete() ? oldDoc.email : doc.email);
        }

        // Check if document is being created/added for first time
        function isCreate() {
          // Checking false for the Admin UI to work
          return ((oldDoc == false) || (oldDoc == null || oldDoc._deleted) && !isDelete());
        }

        // Check if this is a document update
        function isUpdate() {
          return (!isCreate() && !isDelete());
        }

        // Check if this is a document delete
        function isDelete() {
          return (doc._deleted == true);
        }

        // Verify that specified property exists
        function validateNotEmpty(key, value) {
          if (!value) {
            throw({forbidden: key + " is not provided."});
          }
        }

        // Verify that specified property value has not changed during update
        function validateReadOnly(name, value, oldValue) {
          if (value != oldValue) {
            throw({forbidden: name + " is read-only."});
          }
        }
      }`
      "users": { "douglas.bonser@couchbase.com": { "password": "password"} }
    }
  }
}
